(* 
   purpose  : examples for a paper (deadline at 2024/05/22)
   author   : Zhengpu Shi
   date     : 2024.05.20
 *)

From FinMatrix Require MatrixQ MatrixR.

(* More examples for a paper in 2024/05/22 *)

(* CASE 2: Compute inverse matrix of a matrix which contain decimal numbers *)
Section CASE2.
  Import MatrixQ.

  (* create random data in MATLAB by command ">> rand(7,7)" *)
  
  (* To use same input, we manually enter the input matrix in MATLAB, such as *)
  (*
A = [
0.8147 0.1576 0.6557 0.7060 0.4387 0.2760 0.7513; ..., 
0.9058 0.9706 0.0357 0.0318 0.3816 0.6797 0.2551; ..., 
0.1270 0.9572 0.8491 0.2769 0.7655 0.6551 0.5060; ..., 
0.9134 0.4854 0.9340 0.0462 0.7952 0.1626 0.6991; ..., 
0.6324 0.8003 0.6787 0.0971 0.1869 0.1190 0.8909; ..., 
0.0975 0.1419 0.7577 0.8235 0.4898 0.4984 0.9593; ..., 
0.2785 0.4218 0.7431 0.6948 0.4456 0.9597 0.5472]
   *)
  
  Let M :=
        [[0.8147;0.1576;0.6557;0.7060;0.4387;0.2760;0.7513];
         [0.9058;0.9706;0.0357;0.0318;0.3816;0.6797;0.2551];
         [0.1270;0.9572;0.8491;0.2769;0.7655;0.6551;0.5060];
         [0.9134;0.4854;0.9340;0.0462;0.7952;0.1626;0.6991];
         [0.6324;0.8003;0.6787;0.0971;0.1869;0.1190;0.8909];
         [0.0975;0.1419;0.7577;0.8235;0.4898;0.4984;0.9593];
         [0.2785;0.4218;0.7431;0.6948;0.4456;0.9597;0.5472]].

  (* get inversion by ">> inv(A)" *)
  (* use command ">> format rat" to show fraction style of the result *)
  (* use command ">> format long" to show more digital numbers of the result *)

  (* Time Compute minvListGE 7 M. *)
  (*
     = [[125816677331949724961900000 # 173622722306318064376592773;
         33199397085762485364030000 # 173622722306318064376592773;
         -91487051667680399231100000 # 173622722306318064376592773;
         49343393379572006167850000 # 173622722306318064376592773;
         4585912985342535119960000 # 173622722306318064376592773;
         -8007688630616085484220000 # 10213101312136356728034869;
         64520911978114351728050000 # 173622722306318064376592773];
        [199197986989656438471022000 # 173622722306318064376592773;
         2002353431344364382890000 # 173622722306318064376592773;
         264862610150616829528006000 # 173622722306318064376592773;
         -222731642673455721903318000 # 173622722306318064376592773;
         92527042760189143138912000 # 173622722306318064376592773;
         -8209819340198801603746000 # 10213101312136356728034869;
         -140758086516850294817840000 # 173622722306318064376592773];
        [86577166569178046693450000 # 173622722306318064376592773;
         -264212238396202045431500000 # 173622722306318064376592773;
         58609464981044654931760000 # 173622722306318064376592773;
         44943331476639833252890000 # 173622722306318064376592773;
         121922289738497013350510000 # 173622722306318064376592773;
         -19323818559452578559410000 # 10213101312136356728034869;
         270089623496165533071940000 # 173622722306318064376592773];
        [483996053893373550372920000 # 173622722306318064376592773;
         -64082837875864671631980000 # 173622722306318064376592773;
         269215119675277184378830000 # 173622722306318064376592773;
         -312544648865217364394560000 # 173622722306318064376592773;
         -49349729927190190377590000 # 173622722306318064376592773;
         -8841234954841386539150000 # 10213101312136356728034869;
         -140446220253641648543130000 # 173622722306318064376592773];
        [-32554819623839532176180000 # 173622722306318064376592773;
         129065142726782391744930000 # 173622722306318064376592773;
         119908528437639484223940000 # 173622722306318064376592773;
         128946343768058472619630000 # 173622722306318064376592773;
         -268091133287636140027250000 # 173622722306318064376592773;
         14202671875198995813470000 # 10213101312136356728034869;
         -277891792408414677103870000 # 173622722306318064376592773];
        [-335170444416349290960374000 # 173622722306318064376592773;
         99245727070329496166490000 # 173622722306318064376592773;
         -249674285147866914663912000 # 173622722306318064376592773;
         147850843161708553993436000 # 173622722306318064376592773;
         -21912149744871437547674000 # 173622722306318064376592773;
         6506249183108982500302000 # 10213101312136356728034869;
         297671062955918755021260000 # 173622722306318064376592773];
        [-335358375623362433065784000 # 173622722306318064376592773;
         142567056787633694274380000 # 173622722306318064376592773;
         -238783063715793739880272000 # 173622722306318064376592773;
         118080700419181706515686000 # 173622722306318064376592773;
         80177548518261549081376000 # 173622722306318064376592773;
         24895293806390858513692000 # 10213101312136356728034869;
         -91269175066073405555400000 # 173622722306318064376592773]]
     : dlist Q
   *)
  
  (* Time Compute minvListAM 7 M. *)
(*   = [[125816677331949724961900000 # 173622722306318064376592773;
         33199397085762485364030000 # 173622722306318064376592773;
         -91487051667680399231100000 # 173622722306318064376592773;
         49343393379572006167850000 # 173622722306318064376592773;
         4585912985342535119960000 # 173622722306318064376592773;
         -8007688630616085484220000 # 10213101312136356728034869;
         64520911978114351728050000 # 173622722306318064376592773];
        [199197986989656438471022000 # 173622722306318064376592773;
         2002353431344364382890000 # 173622722306318064376592773;
         264862610150616829528006000 # 173622722306318064376592773;
         -222731642673455721903318000 # 173622722306318064376592773;
         92527042760189143138912000 # 173622722306318064376592773;
         -8209819340198801603746000 # 10213101312136356728034869;
         -140758086516850294817840000 # 173622722306318064376592773];
        [86577166569178046693450000 # 173622722306318064376592773;
         -264212238396202045431500000 # 173622722306318064376592773;
         58609464981044654931760000 # 173622722306318064376592773;
         44943331476639833252890000 # 173622722306318064376592773;
         121922289738497013350510000 # 173622722306318064376592773;
         -19323818559452578559410000 # 10213101312136356728034869;
         270089623496165533071940000 # 173622722306318064376592773];
        [483996053893373550372920000 # 173622722306318064376592773;
         -64082837875864671631980000 # 173622722306318064376592773;
         269215119675277184378830000 # 173622722306318064376592773;
         -312544648865217364394560000 # 173622722306318064376592773;
         -49349729927190190377590000 # 173622722306318064376592773;
         -8841234954841386539150000 # 10213101312136356728034869;
         -140446220253641648543130000 # 173622722306318064376592773];
        [-32554819623839532176180000 # 173622722306318064376592773;
         129065142726782391744930000 # 173622722306318064376592773;
         119908528437639484223940000 # 173622722306318064376592773;
         128946343768058472619630000 # 173622722306318064376592773;
         -268091133287636140027250000 # 173622722306318064376592773;
         14202671875198995813470000 # 10213101312136356728034869;
         -277891792408414677103870000 # 173622722306318064376592773];
        [-335170444416349290960374000 # 173622722306318064376592773;
         99245727070329496166490000 # 173622722306318064376592773;
         -249674285147866914663912000 # 173622722306318064376592773;
         147850843161708553993436000 # 173622722306318064376592773;
         -21912149744871437547674000 # 173622722306318064376592773;
         6506249183108982500302000 # 10213101312136356728034869;
         297671062955918755021260000 # 173622722306318064376592773];
        [-335358375623362433065784000 # 173622722306318064376592773;
         142567056787633694274380000 # 173622722306318064376592773;
         -238783063715793739880272000 # 173622722306318064376592773;
         118080700419181706515686000 # 173622722306318064376592773;
         80177548518261549081376000 # 173622722306318064376592773;
         24895293806390858513692000 # 10213101312136356728034869;
         -91269175066073405555400000 # 173622722306318064376592773]]
     : dlist Q
 *)

  (* the result of MATLAB by command "inv(A)"  *)
End CASE2.

(* CASE 3: Compute inverse matrix of a matrix which is symbolic *)
Section CASE3.
  Import MatrixR.
  Variable θ ϕ : R.
  Notation sθ := (sin θ). Notation cθ := (cos θ).
  Notation sϕ := (sin ϕ). Notation cϕ := (cos ϕ).

  (* Given input matrix *)
  Let K : smat 3 := l2m [[1;0;-sθ];[0;cϕ;cθ*sϕ];[0;-sϕ;cθ*cϕ]]%R.

  (* A unknown inverse matrix *)
  Variable a11 a12 a13 a21 a22 a23 a31 a32 a33 : A.
  Let W : smat 3 := l2m [[a11;a12;a13];[a21;a22;a23];[a31;a32;a33]].
  
  (* Find inverse matrix *)
  Goal minvNoCheck K = W.
  Proof.
    meq; field_simplify; autorewrite with R. 
    all:
    match goal with
    | |- ?a = ?b => idtac
    | |- ?a <> ?b => try admit
    end.
    (* now, we find a preliminary formulas: *)
    (*
  1 = a11

goal 2 (ID 4122) is:
 sϕ * sθ / cθ = a12
goal 3 (ID 4128) is:
 cϕ * sθ / cθ = a13
goal 4 (ID 4132) is:
 0 = a21
goal 5 (ID 4139) is:
 cϕ * cθ / cθ = a22
goal 6 (ID 4147) is:
 (- (cθ * sϕ / cθ))%R = a23
goal 7 (ID 4151) is:
 0 = a31
goal 8 (ID 4158) is:
 sϕ / cθ = a32
goal 9 (ID 4164) is:
 cϕ / cθ = a33
     *)
  Abort.

End CASE3.
